// Package javadoc and sources
java {
    withJavadocJar()
    withSourcesJar()
}

// Configure publishing repositories and publications
publishing {
    publications {
        mavenRelease(MavenPublication) {
            pom {
                groupId         = rootProject.group
                artifactId      = rootProject.artifactId
                name            = rootProject.artifactName
                description     = rootProject.description
                version         = rootProject.version
                url             = rootProject.homepage
                licenses {
                    license {
                        name    = rootProject.licenseName
                        url     = rootProject.licenseUrl
                    }
                }
                developers {
                    developer {
                        id      = rootProject.developerId
                        name    = rootProject.developerName
                        email   = rootProject.developerEmail
                    }
                }
                organization {
                    name        = rootProject.organizationName
                    url         = rootProject.organizationUrl
                }
                issueManagement {
                    system      = rootProject.issuesSystem
                    url         = rootProject.issuesUrl
                }
                ciManagement {
                    system      = rootProject.ciSystem
                    url         = rootProject.ciUrl
                }
                scm {
                    url         = rootProject.repository
                    connection  = rootProject.checkout
                }
            }
            from(components.java)
        }
    }
    repositories {
        maven {
            url = layout.buildDirectory.dir('staging-deploy')
        }
    }
}

signing {
    required = project.hasProperty('signingKey') && project.hasProperty('signingPassword')
    useInMemoryPgpKeys(project.findProperty('signingKey'), project.findProperty('signingPassword'))
    sign publishing.publications.mavenRelease
}

// Configure JReleaser
jreleaser {

    project {
        name = rootProject.artifactId
        version = rootProject.version
        versionPattern = 'CUSTOM'
        snapshot {
            pattern = '.*-SNAPSHOT'
            label = 'early-access'
            fullChangelog = true
        }
        description = rootProject.description
        longDescription = rootProject.longDescription
        authors = [rootProject.developerName]
        tags = [
            'java',
            'library',
            'jackson',
            'java-library',
            'result',
            'serde-json',
            'serde-support',
            'jackson-databind'
        ]
        maintainers = [rootProject.developerName]
        license = rootProject.licenseId
        inceptionYear = rootProject.inceptionYear
        copyright = rootProject.copyright
        vendor = rootProject.organizationName
        links {
            homepage = rootProject.repository
            documentation = rootProject.homepage
            license = rootProject.licenseUrl
            bugTracker = rootProject.issuesUrl
            vcsBrowser = rootProject.repository
            donation = rootProject.sponsorUrl
        }
        languages {
            java {
                groupId = rootProject.group
                artifactId = rootProject.artifactId
                version = '8'
            }
        }
        icon {
            url = rootProject.iconUrl
            primary = true
            width = 64
            height = 64
        }
    }

    release {
        github {
            enabled = true
            repoOwner = rootProject.organizationId
            name = rootProject.artifactId
            username = rootProject.developerId
            tagName = rootProject.version
            previousTagName = rootProject.previousVersion
        }
    }

    signing {
        active = 'ALWAYS'
        verify = false
        mode = 'MEMORY'
    }

    deploy {
        maven {
            mavenCentral {
                'release-deploy' {
                    active = 'RELEASE'
                    url = 'https://central.sonatype.com/api/v1/publisher'
                    stagingRepository('build/staging-deploy')
                }
            }
            nexus2 {
                'snapshot-deploy' {
                    active = 'SNAPSHOT'
                    url = 'https://oss.sonatype.org/service/local'
                    snapshotUrl = 'https://central.sonatype.com/repository/maven-snapshots'
                    applyMavenCentralRules = true
                    snapshotSupported = true
                    closeRepository = true
                    releaseRepository = true
                    stagingRepository('build/staging-deploy')
                }
            }
        }
    }
}
